"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIndicatorColor = exports.indicatorColors = void 0;
var progress_config_1 = require("./../../progress.config");
var base_1 = require("./base");
var colors = {
    primary: {
        light: "bg-primary-600",
        dark: "bg-primary-500",
        both: "bg-primary-600 dark:bg-primary-500",
    },
    secondary: {
        light: "bg-secondary-600",
        dark: "bg-secondary-500",
        both: "bg-secondary-600 dark:bg-secondary-500",
    },
    accent: {
        light: "bg-accent-600",
        dark: "bg-accent-500",
        both: "bg-accent-600 dark:bg-accent-500",
    },
    success: {
        light: "bg-success-600",
        dark: "bg-success-500",
        both: "bg-success-600 dark:bg-success-500",
    },
    info: {
        light: "bg-info-600",
        dark: "bg-info-500",
        both: "bg-info-600 dark:bg-info-500",
    },
    warning: {
        light: "bg-warning-600",
        dark: "bg-warning-500",
        both: "bg-warning-600 dark:bg-warning-500",
    },
    danger: {
        light: "bg-danger-600",
        dark: "bg-danger-500",
        both: "bg-danger-600 dark:bg-danger-500",
    },
    gray: {
        light: "bg-gray-600",
        dark: "bg-gray-500",
        both: "bg-gray-600 dark:bg-gray-500",
    },
    neutral: {
        light: "bg-gray-900",
        dark: "bg-white",
        both: "bg-gray-900 dark:bg-white",
    },
    gradient: "bg-gradient-to-r",
};
var indicatorColors = {
    primary: colors.primary[progress_config_1.default.appearance],
    secondary: colors.secondary[progress_config_1.default.appearance],
    accent: colors.accent[progress_config_1.default.appearance],
    success: colors.success[progress_config_1.default.appearance],
    info: colors.info[progress_config_1.default.appearance],
    warning: colors.warning[progress_config_1.default.appearance],
    danger: colors.danger[progress_config_1.default.appearance],
    gray: colors.gray[progress_config_1.default.appearance],
    neutral: colors.neutral[progress_config_1.default.appearance],
    gradient: colors.gradient,
};
exports.indicatorColors = indicatorColors;
/**
 * Gets the Tailwindcss utilities for the specified indicator color.
 *
 * @param color The indicator color. Can be one of the following values:
 *     * `primary`
 *     * `secondary`
 *     * `success`
 *     * `warning`
 *     * `danger`
 *     * `info`
 *     * `accent`
 *     * `gray`
 *     * `neutral`
 *
 * @param colors An optional object containing custom indicator colors.
 *
 * @returns The Tailwindcss utilities for the specified indicator color.
 */
function getIndicatorColor(color, colors) {
    if (colors === void 0) { colors = indicatorColors; }
    return base_1.baseIndicator + " " + colors[color];
}
exports.getIndicatorColor = getIndicatorColor;
