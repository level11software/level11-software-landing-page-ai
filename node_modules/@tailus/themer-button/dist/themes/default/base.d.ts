import { Colors, Sizes } from "../button.types";
declare const base: {
    layout: string;
    appearances: {
        light: string;
        dark: string;
        both: string;
    };
};
declare const iconButtonUtilities: string;
declare const buttonSizes: Sizes;
declare const iconOnlyButtonSizes: Sizes;
declare const iconSizes: Sizes;
declare const leadingIconSizes: Sizes;
declare const trailingIconSizes: Sizes;
/**
 * Gets the base Tailwind utilities for a button.

 * @param color The color utilities of the button.
 * @param colors The object containing the colors utilities.
 * @returns A string containing the Tailwind utilities, including color utilities for the button.
 */
declare const getBaseButton: (color: string, buttonBase?: {
    layout: string;
    appearances: {
        light: string;
        dark: string;
        both: string;
    };
}, colors?: Colors) => string;
/**
 * Gets an object containing the Tailwind utilities for a button with all sizes.

 * @param color The color utilities of the button.
 * @param buttonSizes The object containing the button sizes.
 * @returns An object containing the Tailwind utilities for the button with all sizes.
 *
 * **Note:** This function should not be used for leading Icon buttons or trailing Icon buttons. For those types of buttons, use the `getIconButtonWithSizes()` function instead.
 */
declare const getButtonSizes: (color: string, sizes?: Sizes) => {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
};
/**
 * Gets an object containing the base Tailwind utilities for a **leading Icon button** or **trailing Icon button** with all sizes.

 * @param color The color utilities of the button.
 * @param buttonSizes The object containing the button sizes.
 * @returns An object containing the base Tailwind utilities for the button with all sizes.

 * **Note:** This function should not be used for icon-only buttons. For icon-only buttons, use the `getButtonWithSizes()` function instead.
 */
declare const getIconButtonSizes: (color: string, sizes?: Sizes) => {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
};
export { base, buttonSizes, iconOnlyButtonSizes, iconSizes, leadingIconSizes, trailingIconSizes, iconButtonUtilities, getBaseButton, getButtonSizes, getIconButtonSizes, };
