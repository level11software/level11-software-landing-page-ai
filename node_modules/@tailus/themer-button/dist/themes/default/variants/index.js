"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.iconOnlyButtonSizes = exports.trailingIconSizes = exports.leadingIconSizes = exports.iconSizes = exports.getBaseButton = exports.iconButtonUtilities = exports.buttonSizes = exports.getIconButtonSizes = exports.getButtonSizes = void 0;
var base_1 = require("./../base");
/**
 * Gets an object containing the Tailwind utilities for a button with all sizes.

 * @param color The color utilities of the button.
 * @param buttonSizes The object containing the button sizes.
 * @returns An object containing the Tailwind utilities for the button with all sizes.
 *
 * **Note:** This function should not be used for leading Icon buttons or trailing Icon buttons. For those types of buttons, use the `getIconButtonWithSizes()` function instead.
 */
var getButtonSizes = function (color, base, colors, sizes) {
    if (sizes === void 0) { sizes = base_1.buttonSizes; }
    return {
        xs: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(sizes.xs),
        sm: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(sizes.sm),
        md: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(sizes.md),
        lg: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(sizes.lg),
        xl: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(sizes.xl),
    };
};
exports.getButtonSizes = getButtonSizes;
/**
 * Gets an object containing the base Tailwind utilities for a **leading Icon button** or **trailing Icon button** with all sizes.

 * @param color The color utilities of the button.
 * @param buttonSizes The object containing the button sizes.
 * @returns An object containing the base Tailwind utilities for the button with all sizes.

 * **Note:** This function should not be used for icon-only buttons. For icon-only buttons, use the `getButtonWithSizes()` function instead.
 */
var getIconButtonSizes = function (color, base, colors, sizes) {
    if (sizes === void 0) { sizes = base_1.buttonSizes; }
    return {
        xs: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(base_1.iconButtonUtilities, " ").concat(sizes.xs),
        sm: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(base_1.iconButtonUtilities, " ").concat(sizes.sm),
        md: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(base_1.iconButtonUtilities, " ").concat(sizes.md),
        lg: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(base_1.iconButtonUtilities, " ").concat(sizes.lg),
        xl: "".concat((0, base_1.getBaseButton)(color, base, colors), " ").concat(base_1.iconButtonUtilities, " ").concat(sizes.xl),
    };
};
exports.getIconButtonSizes = getIconButtonSizes;
var base_2 = require("./../base");
Object.defineProperty(exports, "buttonSizes", { enumerable: true, get: function () { return base_2.buttonSizes; } });
Object.defineProperty(exports, "iconButtonUtilities", { enumerable: true, get: function () { return base_2.iconButtonUtilities; } });
Object.defineProperty(exports, "getBaseButton", { enumerable: true, get: function () { return base_2.getBaseButton; } });
Object.defineProperty(exports, "iconSizes", { enumerable: true, get: function () { return base_2.iconSizes; } });
Object.defineProperty(exports, "leadingIconSizes", { enumerable: true, get: function () { return base_2.leadingIconSizes; } });
Object.defineProperty(exports, "trailingIconSizes", { enumerable: true, get: function () { return base_2.trailingIconSizes; } });
Object.defineProperty(exports, "iconOnlyButtonSizes", { enumerable: true, get: function () { return base_2.iconOnlyButtonSizes; } });
